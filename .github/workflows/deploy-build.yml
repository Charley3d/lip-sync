name: Simple Build

on:
  push:
    branches: [ master ]
  workflow_dispatch:
  
jobs:
  build-extension:
      permissions:
        contents: write # to be able to publish a GitHub release
        issues: write # to be able to comment on released issues
        pull-requests: write # to be able to comment on released pull requests

      name: Blender Extension Build
      runs-on: ubuntu-latest

      steps:
        - name: Checkout repo
          uses: actions/checkout@v4

        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: '3.11'
  
        - name: Install tomlkit
          run: pip install tomlkit

        - name: Get next version from semantic-release
          id: next_version
          run: |
            VERSION=$(npx semantic-release --dry-run | grep -oP 'The next release version is \K[0-9]+\.[0-9]+\.[0-9]+')
            echo "version=$VERSION" >> $GITHUB_OUTPUT

        - name: Update version in Blender Manifest
          run: |
            python scripts/update_version.py ${{ steps.next_version.outputs.version }}

        - name: Install Blender via Snap
          run: sudo snap install blender --classic

        - name: Build Extension with blender
          run: blender --command extension build --split-platforms

        # Upload the full release of Blender Add-on
        - name: Clean platform-specific archives
          run: |
            for zipfile in iocgpoly_lip_sync-*-*.zip; do
              echo "Examining $zipfile"
              unzip -l "$zipfile" | grep -i "archives"

              # Extract platform from filename (between last - and _)
              platform=$(echo $zipfile | sed 's/.*-\(.*\)_.*/\1/')

              echo "Processing $zipfile (platform: $platform)"

              # Create temp dir
              temp_dir="${platform}_temp"
              unzip -q "$zipfile" -d "$temp_dir"

              # List the actual directory structure
              echo "Directory structure in temp_dir:"
              ls -la "$temp_dir/Assets/Archives/"

              rm "$zipfile"
              cd "$temp_dir"

              # Remove irrelevant platform folders based on the platform
              case $platform in
                linux)
                  rm -rf Assets/Archives/darwin Assets/Archives/windows
                  ;;
                macos)
                  rm -rf Assets/Archives/linux Assets/Archives/windows
                  ;;
                windows)
                  rm -rf Assets/Archives/darwin Assets/Archives/linux
                  ;;
              esac

              # List what remains
              echo "Remaining directories:"
              ls -la Assets/Archives/

              # Rezip with same name
              zip -r "../$zipfile" .
              cd ..
              rm -rf "$temp_dir"
            done

        - name: Semantic release
          # if: github.event_name == 'push' && github.ref == 'refs/heads/master'
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: npx semantic-release
          
        - name: Upload Blender Addon
          if: github.event_name == 'workflow_dispatch'
          uses: actions/upload-artifact@v4
          with:
            name: extension-builds
            path: ./*.zip
        
