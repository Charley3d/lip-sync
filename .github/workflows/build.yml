name: Build eSpeak NG macOS Universal Library with Data

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-windows:
    name: Build Windows
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Clone Espeak NG repo
      - name: Clone espeak NG
        run: git clone --depth 1 https://github.com/espeak-ng/espeak-ng.git

      # Clone pcaudiolib repo (required for Windows build)
      - name: Clone pcaudiolib
        run: git clone --depth 1 https://github.com/espeak-ng/pcaudiolib.git espeak-ng/src/pcaudiolib

      # Build Espeak NG for Windows
      - name: Build with MSBuild
        working-directory: espeak-ng
        shell: cmd
        run: |
          cd src/windows
          "%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe > msbuild_path.txt
          set /p MSBUILD_PATH=<msbuild_path.txt
          call "%MSBUILD_PATH%" espeak-ng.sln /p:Configuration=Release

      # Copy .dll and data folder to temporary dist dir
      - name: Copy Windows DLL + Data
        run: |
          mkdir dist
          copy espeak-ng\src\windows\x64\Release\libespeak-ng.dll dist\
          xcopy espeak-ng\espeak-ng-data dist\espeak-ng-data /E /I

      # Upload dll and data artifacts
      - name: Upload Windows bundle
        uses: actions/upload-artifact@v4
        with:
          name: espeak-ng-windows-bundle
          path: dist/

      # Zip artifacts
      - name: Zip Windows build
        shell: pwsh
        run: |
          Compress-Archive -Path dist\* -DestinationPath espeak-ng-windows.zip

      # Copy Zipped artifacts to Assets/windows
      - name: Copy ZIP to Asset folder
        run: |
          New-Item -ItemType Directory -Force -Path Assets\Archives\windows
          Copy-Item -Path espeak-ng-windows.zip -Destination Assets\Archives\windows\

      # Remove temp files and folders + unwanted files for release
      - name: Clean up folder to zip Blender Addon
        shell: pwsh
        run: |
          Remove-Item -Recurse -Force espeak-ng
          Remove-Item -Recurse -Force dist
          Remove-Item -Force espeak-ng-windows.zip 
          Remove-Item -Force .gitignore -ErrorAction SilentlyContinue
          Remove-Item -Force dev_tools.py -ErrorAction SilentlyContinue
          Remove-Item -Recurse -Force .github -ErrorAction SilentlyContinue
          Remove-Item -Recurse -Force .idea -ErrorAction SilentlyContinue

      # Upload the full release of Blender Add-on
      - name: Upload Windows bundle
        uses: actions/upload-artifact@v4
        with:
          name: lipsync-release
          path: ./
#  build-linux:
#    name: Build linux
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Clone eSpeak NG
#        run: git clone --depth 1 https://github.com/espeak-ng/espeak-ng.git
#
#      # Step 2: Install Build Dependencies
#      - name: Install dependencies
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y make autoconf automake libtool pkg-config
#          sudo apt-get install -y gcc g++
#          sudo apt-get install -y libpcaudio-dev
#
#      - name: Build linux
#        working-directory: espeak-ng
#        run: |
#          ./autogen.sh
#          ./configure
#          make
#          mkdir -p ../dist
#          cp src/.libs/libespeak-ng.so* ../dist/
#          cp -r espeak-ng-data ../dist/espeak-ng-data
#
#      - name: Upload Linux lib + data
#        uses: actions/upload-artifact@v4
#        with:
#          name: espeak-ng-linux-bundle
#          path: dist/
#
#  build-arm64:
#    name: Build macOS (arm64)
#    runs-on: macos-latest
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Clone eSpeak NG
#        run: git clone --depth 1 https://github.com/espeak-ng/espeak-ng.git
#
#      # Step 2: Install Build Dependencies
#      - name: Install dependencies on macOS
#        run: |
#          brew update
#          brew install make gcc autoconf automake libtool pkg-config portaudio
#
#      - name: Build arm64
#        working-directory: espeak-ng
#        run: |
#          ./autogen.sh
#          ./configure CFLAGS="-arch arm64" LDFLAGS="-arch arm64"
#          make
#          cp src/.libs/libespeak-ng.dylib ../libespeak-ng-arm64.dylib
#          cp -r espeak-ng-data ../espeak-ng-data  # copy full voice data
#
#      - name: Upload arm64 lib + data
#        uses: actions/upload-artifact@v4
#        with:
#          name: espeak-ng-arm64
#          path: |
#            libespeak-ng-arm64.dylib
#            espeak-ng-data/
#
#  build-x86_64:
#    name: Build macOS (x86_64)
#    runs-on: macos-13
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Clone eSpeak NG
#        run: git clone --depth 1 https://github.com/espeak-ng/espeak-ng.git
#
#      # Step 2: Install Build Dependencies
#      - name: Install dependencies on macOS
#        run: |
#          brew update
#          brew install make gcc autoconf automake libtool pkg-config portaudio
#
#      - name: Build x86_64
#        working-directory: espeak-ng
#        run: |
#          ./autogen.sh
#          ./configure CFLAGS="-arch x86_64" LDFLAGS="-arch x86_64"
#          make
#          cp src/.libs/libespeak-ng.dylib ../libespeak-ng-x86_64.dylib
#
#      - name: Upload x86_64 lib
#        uses: actions/upload-artifact@v4
#        with:
#          name: espeak-ng-x86_64
#          path: libespeak-ng-x86_64.dylib
#
#  merge:
#    name: Create Universal macOS lib + bundle data
#    runs-on: macos-latest
#    needs: [build-arm64, build-x86_64]
#
#    steps:
#      - name: Download arm64 lib + data
#        uses: actions/download-artifact@v4
#        with:
#          name: espeak-ng-arm64
#
#      - name: Download x86_64 lib
#        uses: actions/download-artifact@v4
#        with:
#          name: espeak-ng-x86_64
#
#      - name: Merge with lipo and prepare bundle
#        run: |
#          mkdir -p dist
#          lipo -create -output dist/libespeak-ng.dylib \
#            libespeak-ng-arm64.dylib \
#            libespeak-ng-x86_64.dylib
#          cp -r espeak-ng-data dist/espeak-ng-data
#          file dist/libespeak-ng.dylib
#
#      - name: Upload Universal lib + Data
#        uses: actions/upload-artifact@v4
#        with:
#          name: espeak-ng-macos-universal-bundle
#          path: dist/
